{
  "id": "cells-with-odd-values-in-a-matrix",
  "name": "Cells with Odd Values in a Matrix",
  "tags": [
    "Array",
    "Math",
    "Simulation"
  ],
  "description": "There is an m x n matrix that is initialized to all 0's. There is also a 2D array indices where each indices[i] = [ri, ci] represents a 0-indexed location to perform some increment operations on the matrix.\n\nFor each location indices[i], do both of the following:\n\n\n\tIncrement all the cells on row ri.\n\tIncrement all the cells on column ci.\n\n\nGiven m, n, and indices, return the number of odd-valued cells in the matrix after applying the increment to all locations in indices.\n\n \nExample 1:\n\nInput: m = 2, n = 3, indices = [[0,1],[1,1]]\nOutput: 6\nExplanation: Initial matrix = [[0,0,0],[0,0,0]].\nAfter applying first increment it becomes [[1,2,1],[0,1,0]].\nThe final matrix is [[1,3,1],[1,3,1]], which contains 6 odd numbers.\n\n\nExample 2:\n\nInput: m = 2, n = 2, indices = [[1,1],[0,0]]\nOutput: 0\nExplanation: Final matrix = [[2,2],[2,2]]. There are no odd numbers in the final matrix.\n\n\n \nConstraints:\n\n\n\t1 <= m, n <= 50\n\t1 <= indices.length <= 100\n\t0 <= ri < m\n\t0 <= ci < n\n\n\n \nFollow up: Could you solve this in O(n + m + indices.length) time with only O(n + m) extra space?\n"
}