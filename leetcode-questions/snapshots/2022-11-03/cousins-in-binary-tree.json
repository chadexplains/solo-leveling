{
  "id": "cousins-in-binary-tree",
  "name": "Cousins in Binary Tree",
  "tags": [
    "Tree",
    "Depth-First Search",
    "Breadth-First Search",
    "Binary Tree"
  ],
  "description": "Given the root of a binary tree with unique values and the values of two different nodes of the tree x and y, return true if the nodes corresponding to the values x and y in the tree are cousins, or false otherwise.\n\nTwo nodes of a binary tree are cousins if they have the same depth with different parents.\n\nNote that in a binary tree, the root node is at the depth 0, and children of each depth k node are at the depth k + 1.\n\n \nExample 1:\n\nInput: root = [1,2,3,4], x = 4, y = 3\nOutput: false\n\n\nExample 2:\n\nInput: root = [1,2,3,null,4,null,5], x = 5, y = 4\nOutput: true\n\n\nExample 3:\n\nInput: root = [1,2,3,null,4], x = 2, y = 3\nOutput: false\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the tree is in the range [2, 100].\n\t1 <= Node.val <= 100\n\tEach node has a unique value.\n\tx != y\n\tx and y are exist in the tree.\n\n"
}