{
  "id": "maximum-binary-tree-ii",
  "name": "Maximum Binary Tree II",
  "tags": [
    "Tree",
    "Binary Tree"
  ],
  "description": "A maximum tree is a tree where every node has a value greater than any other value in its subtree.\n\nYou are given the root of a maximum binary tree and an integer val.\n\nJust as in the previous problem, the given tree was constructed from a list a (root = Construct(a)) recursively with the following Construct(a) routine:\n\n\n\tIf a is empty, return null.\n\tOtherwise, let a[i] be the largest element of a. Create a root node with the value a[i].\n\tThe left child of root will be Construct([a[0], a[1], ..., a[i - 1]]).\n\tThe right child of root will be Construct([a[i + 1], a[i + 2], ..., a[a.length - 1]]).\n\tReturn root.\n\n\nNote that we were not given a directly, only a root node root = Construct(a).\n\nSuppose b is a copy of a with the value val appended to it. It is guaranteed that b has unique values.\n\nReturn Construct(b).\n\n \nExample 1:\n\nInput: root = [4,1,3,null,null,2], val = 5\nOutput: [5,4,null,1,3,null,null,2]\nExplanation: a = [1,4,2,3], b = [1,4,2,3,5]\n\n\nExample 2:\n\nInput: root = [5,2,4,null,1], val = 3\nOutput: [5,2,4,null,1,null,3]\nExplanation: a = [2,1,5,4], b = [2,1,5,4,3]\n\n\nExample 3:\n\nInput: root = [5,2,3,null,1], val = 4\nOutput: [5,2,4,null,1,3]\nExplanation: a = [2,1,5,3], b = [2,1,5,3,4]\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the tree is in the range [1, 100].\n\t1 <= Node.val <= 100\n\tAll the values of the tree are unique.\n\t1 <= val <= 100\n\n"
}