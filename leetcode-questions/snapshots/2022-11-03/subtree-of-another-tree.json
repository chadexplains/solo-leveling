{
  "id": "subtree-of-another-tree",
  "name": "Subtree of Another Tree",
  "tags": [
    "Tree",
    "Depth-First Search",
    "String Matching",
    "Binary Tree",
    "Hash Function"
  ],
  "description": "Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.\n\nA subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.\n\n \nExample 1:\n\nInput: root = [3,4,5,1,2], subRoot = [4,1,2]\nOutput: true\n\n\nExample 2:\n\nInput: root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2]\nOutput: false\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the root tree is in the range [1, 2000].\n\tThe number of nodes in the subRoot tree is in the range [1, 1000].\n\t-104 <= root.val <= 104\n\t-104 <= subRoot.val <= 104\n\n"
}