{
  "id": "linked-list-components",
  "name": "Linked List Components",
  "tags": [
    "Array",
    "Hash Table",
    "Linked List"
  ],
  "description": "You are given the head of a linked list containing unique integer values and an integer array nums that is a subset of the linked list values.\n\nReturn the number of connected components in nums where two values are connected if they appear consecutively in the linked list.\n\n \nExample 1:\n\nInput: head = [0,1,2,3], nums = [0,1,3]\nOutput: 2\nExplanation: 0 and 1 are connected, so [0, 1] and [3] are the two connected components.\n\n\nExample 2:\n\nInput: head = [0,1,2,3,4], nums = [0,3,1,4]\nOutput: 2\nExplanation: 0 and 1 are connected, 3 and 4 are connected, so [0, 1] and [3, 4] are the two connected components.\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the linked list is n.\n\t1 <= n <= 104\n\t0 <= Node.val < n\n\tAll the values Node.val are unique.\n\t1 <= nums.length <= n\n\t0 <= nums[i] < n\n\tAll the values of nums are unique.\n\n"
}