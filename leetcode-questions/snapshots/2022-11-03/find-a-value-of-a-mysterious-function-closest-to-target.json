{
  "id": "find-a-value-of-a-mysterious-function-closest-to-target",
  "name": "Find a Value of a Mysterious Function Closest to Target",
  "tags": [
    "Array",
    "Binary Search",
    "Bit Manipulation",
    "Segment Tree"
  ],
  "description": "\n\nWinston was given the above mysterious function func. He has an integer array arr and an integer target and he wants to find the values l and r that make the value |func(arr, l, r) - target| minimum possible.\n\nReturn the minimum possible value of |func(arr, l, r) - target|.\n\nNotice that func should be called with the values l and r where 0 <= l, r < arr.length.\n\n \nExample 1:\n\nInput: arr = [9,12,3,7,15], target = 5\nOutput: 2\nExplanation: Calling func with all the pairs of [l,r] = [[0,0],[1,1],[2,2],[3,3],[4,4],[0,1],[1,2],[2,3],[3,4],[0,2],[1,3],[2,4],[0,3],[1,4],[0,4]], Winston got the following results [9,12,3,7,15,8,0,3,7,0,0,3,0,0,0]. The value closest to 5 is 7 and 3, thus the minimum difference is 2.\n\n\nExample 2:\n\nInput: arr = [1000000,1000000,1000000], target = 1\nOutput: 999999\nExplanation: Winston called the func with all possible values of [l,r] and he always got 1000000, thus the min difference is 999999.\n\n\nExample 3:\n\nInput: arr = [1,2,4,8,16], target = 0\nOutput: 0\n\n\n \nConstraints:\n\n\n\t1 <= arr.length <= 105\n\t1 <= arr[i] <= 106\n\t0 <= target <= 107\n\n"
}