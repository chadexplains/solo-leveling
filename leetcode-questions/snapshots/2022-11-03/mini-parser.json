{
  "id": "mini-parser",
  "name": "Mini Parser",
  "tags": [
    "String",
    "Stack",
    "Depth-First Search"
  ],
  "description": "Given a string s represents the serialization of a nested list, implement a parser to deserialize it and return the deserialized NestedInteger.\n\nEach element is either an integer or a list whose elements may also be integers or other lists.\n\n \nExample 1:\n\nInput: s = \"324\"\nOutput: 324\nExplanation: You should return a NestedInteger object which contains a single integer 324.\n\n\nExample 2:\n\nInput: s = \"[123,[456,[789]]]\"\nOutput: [123,[456,[789]]]\nExplanation: Return a NestedInteger object containing a nested list with 2 elements:\n1. An integer containing value 123.\n2. A nested list containing two elements:\n    i.  An integer containing value 456.\n    ii. A nested list with one element:\n         a. An integer containing value 789\n\n\n \nConstraints:\n\n\n\t1 <= s.length <= 5 * 104\n\ts consists of digits, square brackets \"[]\", negative sign '-', and commas ','.\n\ts is the serialization of valid NestedInteger.\n\tAll the values in the input are in the range [-106, 106].\n\n"
}