{
  "id": "minimum-cost-to-make-array-equal",
  "name": "Minimum Cost to Make Array Equal",
  "tags": [
    "Array",
    "Binary Search",
    "Sorting",
    "Prefix Sum"
  ],
  "description": "You are given two 0-indexed arrays nums and cost consisting each of n positive integers.\n\nYou can do the following operation any number of times:\n\n\n\tIncrease or decrease any element of the array nums by 1.\n\n\nThe cost of doing one operation on the ith element is cost[i].\n\nReturn the minimum total cost such that all the elements of the array nums become equal.\n\n \nExample 1:\n\nInput: nums = [1,3,5,2], cost = [2,3,1,14]\nOutput: 8\nExplanation: We can make all the elements equal to 2 in the following way:\n- Increase the 0th element one time. The cost is 2.\n- Decrease the 1st element one time. The cost is 3.\n- Decrease the 2nd element three times. The cost is 1 + 1 + 1 = 3.\nThe total cost is 2 + 3 + 3 = 8.\nIt can be shown that we cannot make the array equal with a smaller cost.\n\n\nExample 2:\n\nInput: nums = [2,2,2,2,2], cost = [4,2,8,1,3]\nOutput: 0\nExplanation: All the elements are already equal, so no operations are needed.\n\n\n \nConstraints:\n\n\n\tn == nums.length == cost.length\n\t1 <= n <= 105\n\t1 <= nums[i], cost[i] <= 106\n\n"
}