{
  "id": "minimum-add-to-make-parentheses-valid",
  "name": "Minimum Add to Make Parentheses Valid",
  "tags": [
    "String",
    "Stack",
    "Greedy"
  ],
  "description": "A parentheses string is valid if and only if:\n\n\n\tIt is the empty string,\n\tIt can be written as AB (A concatenated with B), where A and B are valid strings, or\n\tIt can be written as (A), where A is a valid string.\n\n\nYou are given a parentheses string s. In one move, you can insert a parenthesis at any position of the string.\n\n\n\tFor example, if s = \"()))\", you can insert an opening parenthesis to be \"(()))\" or a closing parenthesis to be \"())))\".\n\n\nReturn the minimum number of moves required to make s valid.\n\n \nExample 1:\n\nInput: s = \"())\"\nOutput: 1\n\n\nExample 2:\n\nInput: s = \"(((\"\nOutput: 3\n\n\n \nConstraints:\n\n\n\t1 <= s.length <= 1000\n\ts[i] is either '(' or ')'.\n\n"
}