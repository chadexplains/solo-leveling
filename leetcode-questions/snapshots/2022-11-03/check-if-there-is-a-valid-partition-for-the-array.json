{
  "id": "check-if-there-is-a-valid-partition-for-the-array",
  "name": "Check if There is a Valid Partition For The Array",
  "tags": [
    "Array",
    "Dynamic Programming"
  ],
  "description": "You are given a 0-indexed integer array nums. You have to partition the array into one or more contiguous subarrays.\n\nWe call a partition of the array valid if each of the obtained subarrays satisfies one of the following conditions:\n\n\n\tThe subarray consists of exactly 2 equal elements. For example, the subarray [2,2] is good.\n\tThe subarray consists of exactly 3 equal elements. For example, the subarray [4,4,4] is good.\n\tThe subarray consists of exactly 3 consecutive increasing elements, that is, the difference between adjacent elements is 1. For example, the subarray [3,4,5] is good, but the subarray [1,3,5] is not.\n\n\nReturn true if the array has at least one valid partition. Otherwise, return false.\n\n \nExample 1:\n\nInput: nums = [4,4,4,5,6]\nOutput: true\nExplanation: The array can be partitioned into the subarrays [4,4] and [4,5,6].\nThis partition is valid, so we return true.\n\n\nExample 2:\n\nInput: nums = [1,1,1,2]\nOutput: false\nExplanation: There is no valid partition for this array.\n\n\n \nConstraints:\n\n\n\t2 <= nums.length <= 105\n\t1 <= nums[i] <= 106\n\n"
}