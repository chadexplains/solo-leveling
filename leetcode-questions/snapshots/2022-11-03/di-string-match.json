{
  "id": "di-string-match",
  "name": "DI String Match",
  "tags": [
    "Array",
    "Two Pointers",
    "String",
    "Greedy"
  ],
  "description": "A permutation perm of n + 1 integers of all the integers in the range [0, n] can be represented as a string s of length n where:\n\n\n\ts[i] == 'I' if perm[i] < perm[i + 1], and\n\ts[i] == 'D' if perm[i] > perm[i + 1].\n\n\nGiven a string s, reconstruct the permutation perm and return it. If there are multiple valid permutations perm, return any of them.\n\n \nExample 1:\nInput: s = \"IDID\"\nOutput: [0,4,1,3,2]\nExample 2:\nInput: s = \"III\"\nOutput: [0,1,2,3]\nExample 3:\nInput: s = \"DDI\"\nOutput: [3,2,0,1]\n\n \nConstraints:\n\n\n\t1 <= s.length <= 105\n\ts[i] is either 'I' or 'D'.\n\n"
}