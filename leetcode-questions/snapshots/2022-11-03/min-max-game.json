{
  "id": "min-max-game",
  "name": "Min Max Game",
  "tags": [
    "Array",
    "Simulation"
  ],
  "description": "You are given a 0-indexed integer array nums whose length is a power of 2.\n\nApply the following algorithm on nums:\n\n\n\tLet n be the length of nums. If n == 1, end the process. Otherwise, create a new 0-indexed integer array newNums of length n / 2.\n\tFor every even index i where 0 <= i < n / 2, assign the value of newNums[i] as min(nums[2 * i], nums[2 * i + 1]).\n\tFor every odd index i where 0 <= i < n / 2, assign the value of newNums[i] as max(nums[2 * i], nums[2 * i + 1]).\n\tReplace the array nums with newNums.\n\tRepeat the entire process starting from step 1.\n\n\nReturn the last number that remains in nums after applying the algorithm.\n\n \nExample 1:\n\nInput: nums = [1,3,5,2,4,8,2,2]\nOutput: 1\nExplanation: The following arrays are the results of applying the algorithm repeatedly.\nFirst: nums = [1,5,4,2]\nSecond: nums = [1,4]\nThird: nums = [1]\n1 is the last remaining number, so we return 1.\n\n\nExample 2:\n\nInput: nums = [3]\nOutput: 3\nExplanation: 3 is already the last remaining number, so we return 3.\n\n\n \nConstraints:\n\n\n\t1 <= nums.length <= 1024\n\t1 <= nums[i] <= 109\n\tnums.length is a power of 2.\n\n"
}