{
  "id": "largest-divisible-subset",
  "name": "Largest Divisible Subset",
  "tags": [
    "Array",
    "Math",
    "Dynamic Programming",
    "Sorting"
  ],
  "description": "Given a set of distinct positive integers nums, return the largest subset answer such that every pair (answer[i], answer[j]) of elements in this subset satisfies:\n\n\n\tanswer[i] % answer[j] == 0, or\n\tanswer[j] % answer[i] == 0\n\n\nIf there are multiple solutions, return any of them.\n\n \nExample 1:\n\nInput: nums = [1,2,3]\nOutput: [1,2]\nExplanation: [1,3] is also accepted.\n\n\nExample 2:\n\nInput: nums = [1,2,4,8]\nOutput: [1,2,4,8]\n\n\n \nConstraints:\n\n\n\t1 <= nums.length <= 1000\n\t1 <= nums[i] <= 2 * 109\n\tAll the integers in nums are unique.\n\n"
}