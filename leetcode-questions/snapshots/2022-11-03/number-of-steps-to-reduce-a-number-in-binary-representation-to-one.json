{
  "id": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
  "name": "Number of Steps to Reduce a Number in Binary Representation to One",
  "tags": [
    "String",
    "Bit Manipulation"
  ],
  "description": "Given the binary representation of an integer as a string s, return the number of steps to reduce it to 1 under the following rules:\n\n\n\t\n\tIf the current number is even, you have to divide it by 2.\n\t\n\t\n\tIf the current number is odd, you have to add 1 to it.\n\t\n\n\nIt is guaranteed that you can always reach one for all test cases.\n\n \nExample 1:\n\nInput: s = \"1101\"\nOutput: 6\nExplanation: \"1101\" corressponds to number 13 in their decimal representation.\nStep 1) 13 is odd, add 1 and obtain 14. \nStep 2) 14 is even, divide by 2 and obtain 7.\nStep 3) 7 is odd, add 1 and obtain 8.\nStep 4) 8 is even, divide by 2 and obtain 4.  \nStep 5) 4 is even, divide by 2 and obtain 2. \nStep 6) 2 is even, divide by 2 and obtain 1.  \n\n\nExample 2:\n\nInput: s = \"10\"\nOutput: 1\nExplanation: \"10\" corressponds to number 2 in their decimal representation.\nStep 1) 2 is even, divide by 2 and obtain 1.  \n\n\nExample 3:\n\nInput: s = \"1\"\nOutput: 0\n\n\n \nConstraints:\n\n\n\t1 <= s.length <= 500\n\ts consists of characters '0' or '1'\n\ts[0] == '1'\n\n"
}