{
  "id": "minimum-money-required-before-transactions",
  "name": "Minimum Money Required Before Transactions",
  "tags": [
    "Array",
    "Greedy",
    "Sorting"
  ],
  "description": "You are given a 0-indexed 2D integer array transactions, where transactions[i] = [costi, cashbacki].\n\nThe array describes transactions, where each transaction must be completed exactly once in some order. At any given moment, you have a certain amount of money. In order to complete transaction i, money >= costi must hold true. After performing a transaction, money becomes money - costi + cashbacki.\n\nReturn the minimum amount of money required before any transaction so that all of the transactions can be completed regardless of the order of the transactions.\n\n \nExample 1:\n\nInput: transactions = [[2,1],[5,0],[4,2]]\nOutput: 10\nExplanation:\nStarting with money = 10, the transactions can be performed in any order.\nIt can be shown that starting with money < 10 will fail to complete all transactions in some order.\n\n\nExample 2:\n\nInput: transactions = [[3,0],[0,3]]\nOutput: 3\nExplanation:\n- If transactions are in the order [[3,0],[0,3]], the minimum money required to complete the transactions is 3.\n- If transactions are in the order [[0,3],[3,0]], the minimum money required to complete the transactions is 0.\nThus, starting with money = 3, the transactions can be performed in any order.\n\n\n \nConstraints:\n\n\n\t1 <= transactions.length <= 105\n\ttransactions[i].length == 2\n\t0 <= costi, cashbacki <= 109\n\n"
}