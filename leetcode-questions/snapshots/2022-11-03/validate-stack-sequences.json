{
  "id": "validate-stack-sequences",
  "name": "Validate Stack Sequences",
  "tags": [
    "Array",
    "Stack",
    "Simulation"
  ],
  "description": "Given two integer arrays pushed and popped each with distinct values, return true if this could have been the result of a sequence of push and pop operations on an initially empty stack, or false otherwise.\n\n \nExample 1:\n\nInput: pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\nOutput: true\nExplanation: We might do the following sequence:\npush(1), push(2), push(3), push(4),\npop() -> 4,\npush(5),\npop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1\n\n\nExample 2:\n\nInput: pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\nOutput: false\nExplanation: 1 cannot be popped before 2.\n\n\n \nConstraints:\n\n\n\t1 <= pushed.length <= 1000\n\t0 <= pushed[i] <= 1000\n\tAll the elements of pushed are unique.\n\tpopped.length == pushed.length\n\tpopped is a permutation of pushed.\n\n"
}