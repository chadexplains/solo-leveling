{
  "id": "add-one-row-to-tree",
  "name": "Add One Row to Tree",
  "tags": [
    "Tree",
    "Depth-First Search",
    "Breadth-First Search",
    "Binary Tree"
  ],
  "description": "Given the root of a binary tree and two integers val and depth, add a row of nodes with value val at the given depth depth.\n\nNote that the root node is at depth 1.\n\nThe adding rule is:\n\n\n\tGiven the integer depth, for each not null tree node cur at the depth depth - 1, create two tree nodes with value val as cur's left subtree root and right subtree root.\n\tcur's original left subtree should be the left subtree of the new left subtree root.\n\tcur's original right subtree should be the right subtree of the new right subtree root.\n\tIf depth == 1 that means there is no depth depth - 1 at all, then create a tree node with value val as the new root of the whole original tree, and the original tree is the new root's left subtree.\n\n\n \nExample 1:\n\nInput: root = [4,2,6,3,1,5], val = 1, depth = 2\nOutput: [4,1,1,2,null,null,6,3,1,5]\n\n\nExample 2:\n\nInput: root = [4,2,null,3,1], val = 1, depth = 3\nOutput: [4,2,null,1,1,3,null,null,1]\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the tree is in the range [1, 104].\n\tThe depth of the tree is in the range [1, 104].\n\t-100 <= Node.val <= 100\n\t-105 <= val <= 105\n\t1 <= depth <= the depth of tree + 1\n\n"
}