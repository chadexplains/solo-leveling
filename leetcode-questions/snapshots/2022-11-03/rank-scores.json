{
  "id": "rank-scores",
  "name": "Rank Scores",
  "tags": [
    "Database"
  ],
  "description": "SQL SchemaTable: Scores\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| score       | decimal |\n+-------------+---------+\nid is the primary key for this table.\nEach row of this table contains the score of a game. Score is a floating point value with two decimal places.\n\n\n \n\nWrite an SQL query to rank the scores. The ranking should be calculated according to the following rules:\n\n\n\tThe scores should be ranked from the highest to the lowest.\n\tIf there is a tie between two scores, both should have the same ranking.\n\tAfter a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no holes between ranks.\n\n\nReturn the result table ordered by score in descending order.\n\nThe query result format is in the following example.\n\n \nExample 1:\n\nInput: \nScores table:\n+----+-------+\n| id | score |\n+----+-------+\n| 1  | 3.50  |\n| 2  | 3.65  |\n| 3  | 4.00  |\n| 4  | 3.85  |\n| 5  | 4.00  |\n| 6  | 3.65  |\n+----+-------+\nOutput: \n+-------+------+\n| score | rank |\n+-------+------+\n| 4.00  | 1    |\n| 4.00  | 1    |\n| 3.85  | 2    |\n| 3.65  | 3    |\n| 3.65  | 3    |\n| 3.50  | 4    |\n+-------+------+\n\n"
}