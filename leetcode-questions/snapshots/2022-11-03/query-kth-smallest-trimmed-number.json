{
  "id": "query-kth-smallest-trimmed-number",
  "name": "Query Kth Smallest Trimmed Number",
  "tags": [
    "Array",
    "String",
    "Divide and Conquer",
    "Sorting",
    "Heap (Priority Queue)",
    "Radix Sort",
    "Quickselect"
  ],
  "description": "You are given a 0-indexed array of strings nums, where each string is of equal length and consists of only digits.\n\nYou are also given a 0-indexed 2D integer array queries where queries[i] = [ki, trimi]. For each queries[i], you need to:\n\n\n\tTrim each number in nums to its rightmost trimi digits.\n\tDetermine the index of the kith smallest trimmed number in nums. If two trimmed numbers are equal, the number with the lower index is considered to be smaller.\n\tReset each number in nums to its original length.\n\n\nReturn an array answer of the same length as queries, where answer[i] is the answer to the ith query.\n\nNote:\n\n\n\tTo trim to the rightmost x digits means to keep removing the leftmost digit, until only x digits remain.\n\tStrings in nums may contain leading zeros.\n\n\n \nExample 1:\n\nInput: nums = [\"102\",\"473\",\"251\",\"814\"], queries = [[1,1],[2,3],[4,2],[1,2]]\nOutput: [2,2,1,0]\nExplanation:\n1. After trimming to the last digit, nums = [\"2\",\"3\",\"1\",\"4\"]. The smallest number is 1 at index 2.\n2. Trimmed to the last 3 digits, nums is unchanged. The 2nd smallest number is 251 at index 2.\n3. Trimmed to the last 2 digits, nums = [\"02\",\"73\",\"51\",\"14\"]. The 4th smallest number is 73.\n4. Trimmed to the last 2 digits, the smallest number is 2 at index 0.\n   Note that the trimmed number \"02\" is evaluated as 2.\n\n\nExample 2:\n\nInput: nums = [\"24\",\"37\",\"96\",\"04\"], queries = [[2,1],[2,2]]\nOutput: [3,0]\nExplanation:\n1. Trimmed to the last digit, nums = [\"4\",\"7\",\"6\",\"4\"]. The 2nd smallest number is 4 at index 3.\n   There are two occurrences of 4, but the one at index 0 is considered smaller than the one at index 3.\n2. Trimmed to the last 2 digits, nums is unchanged. The 2nd smallest number is 24.\n\n\n \nConstraints:\n\n\n\t1 <= nums.length <= 100\n\t1 <= nums[i].length <= 100\n\tnums[i] consists of only digits.\n\tAll nums[i].length are equal.\n\t1 <= queries.length <= 100\n\tqueries[i].length == 2\n\t1 <= ki <= nums.length\n\t1 <= trimi <= nums[i].length\n\n\n \nFollow up: Could you use the Radix Sort Algorithm to solve this problem? What will be the complexity of that solution?\n"
}