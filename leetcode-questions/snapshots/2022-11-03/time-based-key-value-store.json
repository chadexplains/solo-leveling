{
  "id": "time-based-key-value-store",
  "name": "Time Based Key-Value Store",
  "tags": [
    "Hash Table",
    "String",
    "Binary Search",
    "Design"
  ],
  "description": "Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key's value at a certain timestamp.\n\nImplement the TimeMap class:\n\n\n\tTimeMap() Initializes the object of the data structure.\n\tvoid set(String key, String value, int timestamp) Stores the key key with the value value at the given time timestamp.\n\tString get(String key, int timestamp) Returns a value such that set was called previously, with timestamp_prev <= timestamp. If there are multiple such values, it returns the value associated with the largest timestamp_prev. If there are no values, it returns \"\".\n\n\n \nExample 1:\n\nInput\n[\"TimeMap\", \"set\", \"get\", \"get\", \"set\", \"get\", \"get\"]\n[[], [\"foo\", \"bar\", 1], [\"foo\", 1], [\"foo\", 3], [\"foo\", \"bar2\", 4], [\"foo\", 4], [\"foo\", 5]]\nOutput\n[null, null, \"bar\", \"bar\", null, \"bar2\", \"bar2\"]\n\nExplanation\nTimeMap timeMap = new TimeMap();\ntimeMap.set(\"foo\", \"bar\", 1);  // store the key \"foo\" and value \"bar\" along with timestamp = 1.\ntimeMap.get(\"foo\", 1);         // return \"bar\"\ntimeMap.get(\"foo\", 3);         // return \"bar\", since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 is \"bar\".\ntimeMap.set(\"foo\", \"bar2\", 4); // store the key \"foo\" and value \"bar2\" along with timestamp = 4.\ntimeMap.get(\"foo\", 4);         // return \"bar2\"\ntimeMap.get(\"foo\", 5);         // return \"bar2\"\n\n\n \nConstraints:\n\n\n\t1 <= key.length, value.length <= 100\n\tkey and value consist of lowercase English letters and digits.\n\t1 <= timestamp <= 107\n\tAll the timestamps timestamp of set are strictly increasing.\n\tAt most 2 * 105 calls will be made to set and get.\n\n"
}