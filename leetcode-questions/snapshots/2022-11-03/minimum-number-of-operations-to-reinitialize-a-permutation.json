{
  "id": "minimum-number-of-operations-to-reinitialize-a-permutation",
  "name": "Minimum Number of Operations to Reinitialize a Permutation",
  "tags": [
    "Array",
    "Math",
    "Simulation"
  ],
  "description": "You are given an even integer n​​​​​​. You initially have a permutation perm of size n​​ where perm[i] == i​ (0-indexed)​​​​.\n\nIn one operation, you will create a new array arr, and for each i:\n\n\n\tIf i % 2 == 0, then arr[i] = perm[i / 2].\n\tIf i % 2 == 1, then arr[i] = perm[n / 2 + (i - 1) / 2].\n\n\nYou will then assign arr​​​​ to perm.\n\nReturn the minimum non-zero number of operations you need to perform on perm to return the permutation to its initial value.\n\n \nExample 1:\n\nInput: n = 2\nOutput: 1\nExplanation: perm = [0,1] initially.\nAfter the 1st operation, perm = [0,1]\nSo it takes only 1 operation.\n\n\nExample 2:\n\nInput: n = 4\nOutput: 2\nExplanation: perm = [0,1,2,3] initially.\nAfter the 1st operation, perm = [0,2,1,3]\nAfter the 2nd operation, perm = [0,1,2,3]\nSo it takes only 2 operations.\n\n\nExample 3:\n\nInput: n = 6\nOutput: 4\n\n\n \nConstraints:\n\n\n\t2 <= n <= 1000\n\tn​​​​​​ is even.\n\n"
}