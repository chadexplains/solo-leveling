{
  "id": "strange-printer-ii",
  "name": "Strange Printer II",
  "tags": [
    "Array",
    "Graph",
    "Topological Sort",
    "Matrix"
  ],
  "description": "There is a strange printer with the following two special requirements:\n\n\n\tOn each turn, the printer will print a solid rectangular pattern of a single color on the grid. This will cover up the existing colors in the rectangle.\n\tOnce the printer has used a color for the above operation, the same color cannot be used again.\n\n\nYou are given a m x n matrix targetGrid, where targetGrid[row][col] is the color in the position (row, col) of the grid.\n\nReturn true if it is possible to print the matrix targetGrid, otherwise, return false.\n\n \nExample 1:\n\nInput: targetGrid = [[1,1,1,1],[1,2,2,1],[1,2,2,1],[1,1,1,1]]\nOutput: true\n\n\nExample 2:\n\nInput: targetGrid = [[1,1,1,1],[1,1,3,3],[1,1,3,4],[5,5,1,4]]\nOutput: true\n\n\nExample 3:\n\nInput: targetGrid = [[1,2,1],[2,1,2],[1,2,1]]\nOutput: false\nExplanation: It is impossible to form targetGrid because it is not allowed to print the same color in different turns.\n\n\n \nConstraints:\n\n\n\tm == targetGrid.length\n\tn == targetGrid[i].length\n\t1 <= m, n <= 60\n\t1 <= targetGrid[row][col] <= 60\n\n"
}