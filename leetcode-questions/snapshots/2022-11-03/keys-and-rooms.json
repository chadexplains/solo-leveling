{
  "id": "keys-and-rooms",
  "name": "Keys and Rooms",
  "tags": [
    "Depth-First Search",
    "Breadth-First Search",
    "Graph"
  ],
  "description": "There are n rooms labeled from 0 to n - 1 and all the rooms are locked except for room 0. Your goal is to visit all the rooms. However, you cannot enter a locked room without having its key.\n\nWhen you visit a room, you may find a set of distinct keys in it. Each key has a number on it, denoting which room it unlocks, and you can take all of them with you to unlock the other rooms.\n\nGiven an array rooms where rooms[i] is the set of keys that you can obtain if you visited room i, return true if you can visit all the rooms, or false otherwise.\n\n \nExample 1:\n\nInput: rooms = [[1],[2],[3],[]]\nOutput: true\nExplanation: \nWe visit room 0 and pick up key 1.\nWe then visit room 1 and pick up key 2.\nWe then visit room 2 and pick up key 3.\nWe then visit room 3.\nSince we were able to visit every room, we return true.\n\n\nExample 2:\n\nInput: rooms = [[1,3],[3,0,1],[2],[0]]\nOutput: false\nExplanation: We can not enter room number 2 since the only key that unlocks it is in that room.\n\n\n \nConstraints:\n\n\n\tn == rooms.length\n\t2 <= n <= 1000\n\t0 <= rooms[i].length <= 1000\n\t1 <= sum(rooms[i].length) <= 3000\n\t0 <= rooms[i][j] < n\n\tAll the values of rooms[i] are unique.\n\n"
}