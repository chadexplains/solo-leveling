{
  "id": "count-unhappy-friends",
  "name": "Count Unhappy Friends",
  "tags": [
    "Array",
    "Simulation"
  ],
  "description": "You are given a list of preferences for n friends, where n is always even.\n\nFor each person i, preferences[i] contains a list of friends sorted in the order of preference. In other words, a friend earlier in the list is more preferred than a friend later in the list. Friends in each list are denoted by integers from 0 to n-1.\n\nAll the friends are divided into pairs. The pairings are given in a list pairs, where pairs[i] = [xi, yi] denotes xi is paired with yi and yi is paired with xi.\n\nHowever, this pairing may cause some of the friends to be unhappy. A friend x is unhappy if x is paired with y and there exists a friend u who is paired with v but:\n\n\n\tx prefers u over y, and\n\tu prefers x over v.\n\n\nReturn the number of unhappy friends.\n\n \nExample 1:\n\nInput: n = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]]\nOutput: 2\nExplanation:\nFriend 1 is unhappy because:\n- 1 is paired with 0 but prefers 3 over 0, and\n- 3 prefers 1 over 2.\nFriend 3 is unhappy because:\n- 3 is paired with 2 but prefers 1 over 2, and\n- 1 prefers 3 over 0.\nFriends 0 and 2 are happy.\n\n\nExample 2:\n\nInput: n = 2, preferences = [[1], [0]], pairs = [[1, 0]]\nOutput: 0\nExplanation: Both friends 0 and 1 are happy.\n\n\nExample 3:\n\nInput: n = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]]\nOutput: 4\n\n\n \nConstraints:\n\n\n\t2 <= n <= 500\n\tn is even.\n\tpreferences.length == n\n\tpreferences[i].length == n - 1\n\t0 <= preferences[i][j] <= n - 1\n\tpreferences[i] does not contain i.\n\tAll values in preferences[i] are unique.\n\tpairs.length == n/2\n\tpairs[i].length == 2\n\txi != yi\n\t0 <= xi, yi <= n - 1\n\tEach person is contained in exactly one pair.\n\n"
}