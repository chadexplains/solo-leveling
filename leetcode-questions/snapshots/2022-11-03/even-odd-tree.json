{
  "id": "even-odd-tree",
  "name": "Even Odd Tree",
  "tags": [
    "Tree",
    "Breadth-First Search",
    "Binary Tree"
  ],
  "description": "A binary tree is named Even-Odd if it meets the following conditions:\n\n\n\tThe root of the binary tree is at level index 0, its children are at level index 1, their children are at level index 2, etc.\n\tFor every even-indexed level, all nodes at the level have odd integer values in strictly increasing order (from left to right).\n\tFor every odd-indexed level, all nodes at the level have even integer values in strictly decreasing order (from left to right).\n\n\nGiven the root of a binary tree, return true if the binary tree is Even-Odd, otherwise return false.\n\n \nExample 1:\n\nInput: root = [1,10,4,3,null,7,9,12,8,6,null,null,2]\nOutput: true\nExplanation: The node values on each level are:\nLevel 0: [1]\nLevel 1: [10,4]\nLevel 2: [3,7,9]\nLevel 3: [12,8,6,2]\nSince levels 0 and 2 are all odd and increasing and levels 1 and 3 are all even and decreasing, the tree is Even-Odd.\n\n\nExample 2:\n\nInput: root = [5,4,2,3,3,7]\nOutput: false\nExplanation: The node values on each level are:\nLevel 0: [5]\nLevel 1: [4,2]\nLevel 2: [3,3,7]\nNode values in level 2 must be in strictly increasing order, so the tree is not Even-Odd.\n\n\nExample 3:\n\nInput: root = [5,9,1,3,5,7]\nOutput: false\nExplanation: Node values in the level 1 should be even integers.\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the tree is in the range [1, 105].\n\t1 <= Node.val <= 106\n\n"
}