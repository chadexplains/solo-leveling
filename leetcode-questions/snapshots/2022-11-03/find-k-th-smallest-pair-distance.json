{
  "id": "find-k-th-smallest-pair-distance",
  "name": "Find K-th Smallest Pair Distance",
  "tags": [
    "Array",
    "Two Pointers",
    "Binary Search",
    "Sorting"
  ],
  "description": "The distance of a pair of integers a and b is defined as the absolute difference between a and b.\n\nGiven an integer array nums and an integer k, return the kth smallest distance among all the pairs nums[i] and nums[j] where 0 <= i < j < nums.length.\n\n \nExample 1:\n\nInput: nums = [1,3,1], k = 1\nOutput: 0\nExplanation: Here are all the pairs:\n(1,3) -> 2\n(1,1) -> 0\n(3,1) -> 2\nThen the 1st smallest distance pair is (1,1), and its distance is 0.\n\n\nExample 2:\n\nInput: nums = [1,1,1], k = 2\nOutput: 0\n\n\nExample 3:\n\nInput: nums = [1,6,1], k = 3\nOutput: 5\n\n\n \nConstraints:\n\n\n\tn == nums.length\n\t2 <= n <= 104\n\t0 <= nums[i] <= 106\n\t1 <= k <= n * (n - 1) / 2\n\n"
}