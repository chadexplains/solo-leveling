{
  "id": "minimum-deletions-to-make-array-divisible",
  "name": "Minimum Deletions to Make Array Divisible",
  "tags": [
    "Array",
    "Math",
    "Sorting",
    "Heap (Priority Queue)",
    "Number Theory"
  ],
  "description": "You are given two positive integer arrays nums and numsDivide. You can delete any number of elements from nums.\n\nReturn the minimum number of deletions such that the smallest element in nums divides all the elements of numsDivide. If this is not possible, return -1.\n\nNote that an integer x divides y if y % x == 0.\n\n \nExample 1:\n\nInput: nums = [2,3,2,4,3], numsDivide = [9,6,9,3,15]\nOutput: 2\nExplanation: \nThe smallest element in [2,3,2,4,3] is 2, which does not divide all the elements of numsDivide.\nWe use 2 deletions to delete the elements in nums that are equal to 2 which makes nums = [3,4,3].\nThe smallest element in [3,4,3] is 3, which divides all the elements of numsDivide.\nIt can be shown that 2 is the minimum number of deletions needed.\n\n\nExample 2:\n\nInput: nums = [4,3,6], numsDivide = [8,2,6,10]\nOutput: -1\nExplanation: \nWe want the smallest element in nums to divide all the elements of numsDivide.\nThere is no way to delete elements from nums to allow this.\n\n \nConstraints:\n\n\n\t1 <= nums.length, numsDivide.length <= 105\n\t1 <= nums[i], numsDivide[i] <= 109\n\n"
}