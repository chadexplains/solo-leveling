{
  "id": "maximum-subarray",
  "name": "Maximum Subarray",
  "tags": [
    "Array",
    "Divide and Conquer",
    "Dynamic Programming"
  ],
  "description": "Given an integer array nums, find the subarray which has the largest sum and return its sum.\n\n \nExample 1:\n\nInput: nums = [-2,1,-3,4,-1,2,1,-5,4]\nOutput: 6\nExplanation: [4,-1,2,1] has the largest sum = 6.\n\n\nExample 2:\n\nInput: nums = [1]\nOutput: 1\n\n\nExample 3:\n\nInput: nums = [5,4,-1,7,8]\nOutput: 23\n\n\n \nConstraints:\n\n\n\t1 <= nums.length <= 105\n\t-104 <= nums[i] <= 104\n\n\n \nFollow up: If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.\n"
}