{
  "id": "minimum-moves-to-move-a-box-to-their-target-location",
  "name": "Minimum Moves to Move a Box to Their Target Location",
  "tags": [
    "Array",
    "Breadth-First Search",
    "Heap (Priority Queue)",
    "Matrix"
  ],
  "description": "A storekeeper is a game in which the player pushes boxes around in a warehouse trying to get them to target locations.\n\nThe game is represented by an m x n grid of characters grid where each element is a wall, floor, or box.\n\nYour task is to move the box 'B' to the target position 'T' under the following rules:\n\n\n\tThe character 'S' represents the player. The player can move up, down, left, right in grid if it is a floor (empty cell).\n\tThe character '.' represents the floor which means a free cell to walk.\n\tThe character '#' represents the wall which means an obstacle (impossible to walk there).\n\tThere is only one box 'B' and one target cell 'T' in the grid.\n\tThe box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box. This is a push.\n\tThe player cannot walk through the box.\n\n\nReturn the minimum number of pushes to move the box to the target. If there is no way to reach the target, return -1.\n\n \nExample 1:\n\nInput: grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\".\",\".\",\"B\",\".\",\"#\"],\n               [\"#\",\".\",\"#\",\"#\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]\nOutput: 3\nExplanation: We return only the number of times the box is pushed.\n\nExample 2:\n\nInput: grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\".\",\".\",\"B\",\".\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]\nOutput: -1\n\n\nExample 3:\n\nInput: grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\".\",\".\",\"#\",\"#\"],\n               [\"#\",\".\",\"#\",\"B\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]\nOutput: 5\nExplanation: push the box down, left, left, up and up.\n\n\n \nConstraints:\n\n\n\tm == grid.length\n\tn == grid[i].length\n\t1 <= m, n <= 20\n\tgrid contains only characters '.', '#', 'S', 'T', or 'B'.\n\tThere is only one character 'S', 'B', and 'T' in the grid.\n\n"
}