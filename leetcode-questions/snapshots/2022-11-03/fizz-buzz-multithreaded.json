{
  "id": "fizz-buzz-multithreaded",
  "name": "Fizz Buzz Multithreaded",
  "tags": [
    "Concurrency"
  ],
  "description": "You have the four functions:\n\n\n\tprintFizz that prints the word \"fizz\" to the console,\n\tprintBuzz that prints the word \"buzz\" to the console,\n\tprintFizzBuzz that prints the word \"fizzbuzz\" to the console, and\n\tprintNumber that prints a given integer to the console.\n\n\nYou are given an instance of the class FizzBuzz that has four functions: fizz, buzz, fizzbuzz and number. The same instance of FizzBuzz will be passed to four different threads:\n\n\n\tThread A: calls fizz() that should output the word \"fizz\".\n\tThread B: calls buzz() that should output the word \"buzz\".\n\tThread C: calls fizzbuzz() that should output the word \"fizzbuzz\".\n\tThread D: calls number() that should only output the integers.\n\n\nModify the given class to output the series [1, 2, \"fizz\", 4, \"buzz\", ...] where the ith token (1-indexed) of the series is:\n\n\n\t\"fizzbuzz\" if i is divisible by 3 and 5,\n\t\"fizz\" if i is divisible by 3 and not 5,\n\t\"buzz\" if i is divisible by 5 and not 3, or\n\ti if i is not divisible by 3 or 5.\n\n\nImplement the FizzBuzz class:\n\n\n\tFizzBuzz(int n) Initializes the object with the number n that represents the length of the sequence that should be printed.\n\tvoid fizz(printFizz) Calls printFizz to output \"fizz\".\n\tvoid buzz(printBuzz) Calls printBuzz to output \"buzz\".\n\tvoid fizzbuzz(printFizzBuzz) Calls printFizzBuzz to output \"fizzbuzz\".\n\tvoid number(printNumber) Calls printnumber to output the numbers.\n\n\n \nExample 1:\nInput: n = 15\nOutput: [1,2,\"fizz\",4,\"buzz\",\"fizz\",7,8,\"fizz\",\"buzz\",11,\"fizz\",13,14,\"fizzbuzz\"]\nExample 2:\nInput: n = 5\nOutput: [1,2,\"fizz\",4,\"buzz\"]\n\n \nConstraints:\n\n\n\t1 <= n <= 50\n\n"
}