{
  "id": "check-completeness-of-a-binary-tree",
  "name": "Check Completeness of a Binary Tree",
  "tags": [
    "Tree",
    "Breadth-First Search",
    "Binary Tree"
  ],
  "description": "Given the root of a binary tree, determine if it is a complete binary tree.\n\nIn a complete binary tree, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\n\n \nExample 1:\n\nInput: root = [1,2,3,4,5,6]\nOutput: true\nExplanation: Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.\n\n\nExample 2:\n\nInput: root = [1,2,3,4,5,null,7]\nOutput: false\nExplanation: The node with value 7 isn't as far left as possible.\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the tree is in the range [1, 100].\n\t1 <= Node.val <= 1000\n\n"
}