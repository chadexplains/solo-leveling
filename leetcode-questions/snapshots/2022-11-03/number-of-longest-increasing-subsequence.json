{
  "id": "number-of-longest-increasing-subsequence",
  "name": "Number of Longest Increasing Subsequence",
  "tags": [
    "Array",
    "Dynamic Programming",
    "Binary Indexed Tree",
    "Segment Tree"
  ],
  "description": "Given an integer array nums, return the number of longest increasing subsequences.\n\nNotice that the sequence has to be strictly increasing.\n\n \nExample 1:\n\nInput: nums = [1,3,5,4,7]\nOutput: 2\nExplanation: The two longest increasing subsequences are [1, 3, 4, 7] and [1, 3, 5, 7].\n\n\nExample 2:\n\nInput: nums = [2,2,2,2,2]\nOutput: 5\nExplanation: The length of the longest increasing subsequence is 1, and there are 5 increasing subsequences of length 1, so output 5.\n\n\n \nConstraints:\n\n\n\t1 <= nums.length <= 2000\n\t-106 <= nums[i] <= 106\n\n"
}