{
  "id": "count-number-of-teams",
  "name": "Count Number of Teams",
  "tags": [
    "Array",
    "Dynamic Programming",
    "Binary Indexed Tree"
  ],
  "description": "There are n soldiers standing in a line. Each soldier is assigned a unique rating value.\n\nYou have to form a team of 3 soldiers amongst them under the following rules:\n\n\n\tChoose 3 soldiers with index (i, j, k) with rating (rating[i], rating[j], rating[k]).\n\tA team is valid if: (rating[i] < rating[j] < rating[k]) or (rating[i] > rating[j] > rating[k]) where (0 <= i < j < k < n).\n\n\nReturn the number of teams you can form given the conditions. (soldiers can be part of multiple teams).\n\n \nExample 1:\n\nInput: rating = [2,5,3,4,1]\nOutput: 3\nExplanation: We can form three teams given the conditions. (2,3,4), (5,4,1), (5,3,1). \n\n\nExample 2:\n\nInput: rating = [2,1,3]\nOutput: 0\nExplanation: We can't form any team given the conditions.\n\n\nExample 3:\n\nInput: rating = [1,2,3,4]\nOutput: 4\n\n\n \nConstraints:\n\n\n\tn == rating.length\n\t3 <= n <= 1000\n\t1 <= rating[i] <= 105\n\tAll the integers in rating are unique.\n\n"
}