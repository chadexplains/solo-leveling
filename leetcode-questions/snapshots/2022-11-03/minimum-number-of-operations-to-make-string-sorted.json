{
  "id": "minimum-number-of-operations-to-make-string-sorted",
  "name": "Minimum Number of Operations to Make String Sorted",
  "tags": [
    "Math",
    "String",
    "Combinatorics"
  ],
  "description": "You are given a string s (0-indexed)​​​​​​. You are asked to perform the following operation on s​​​​​​ until you get a sorted string:\n\n\n\tFind the largest index i such that 1 <= i < s.length and s[i] < s[i - 1].\n\tFind the largest index j such that i <= j < s.length and s[k] < s[i - 1] for all the possible values of k in the range [i, j] inclusive.\n\tSwap the two characters at indices i - 1​​​​ and j​​​​​.\n\tReverse the suffix starting at index i​​​​​​.\n\n\nReturn the number of operations needed to make the string sorted. Since the answer can be too large, return it modulo 109 + 7.\n\n \nExample 1:\n\nInput: s = \"cba\"\nOutput: 5\nExplanation: The simulation goes as follows:\nOperation 1: i=2, j=2. Swap s[1] and s[2] to get s=\"cab\", then reverse the suffix starting at 2. Now, s=\"cab\".\nOperation 2: i=1, j=2. Swap s[0] and s[2] to get s=\"bac\", then reverse the suffix starting at 1. Now, s=\"bca\".\nOperation 3: i=2, j=2. Swap s[1] and s[2] to get s=\"bac\", then reverse the suffix starting at 2. Now, s=\"bac\".\nOperation 4: i=1, j=1. Swap s[0] and s[1] to get s=\"abc\", then reverse the suffix starting at 1. Now, s=\"acb\".\nOperation 5: i=2, j=2. Swap s[1] and s[2] to get s=\"abc\", then reverse the suffix starting at 2. Now, s=\"abc\".\n\n\nExample 2:\n\nInput: s = \"aabaa\"\nOutput: 2\nExplanation: The simulation goes as follows:\nOperation 1: i=3, j=4. Swap s[2] and s[4] to get s=\"aaaab\", then reverse the substring starting at 3. Now, s=\"aaaba\".\nOperation 2: i=4, j=4. Swap s[3] and s[4] to get s=\"aaaab\", then reverse the substring starting at 4. Now, s=\"aaaab\".\n\n\n \nConstraints:\n\n\n\t1 <= s.length <= 3000\n\ts​​​​​​ consists only of lowercase English letters.\n\n"
}