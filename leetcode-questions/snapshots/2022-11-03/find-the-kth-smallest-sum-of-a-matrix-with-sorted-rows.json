{
  "id": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
  "name": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
  "tags": [
    "Array",
    "Binary Search",
    "Heap (Priority Queue)",
    "Matrix"
  ],
  "description": "You are given an m x n matrix mat that has its rows sorted in non-decreasing order and an integer k.\n\nYou are allowed to choose exactly one element from each row to form an array.\n\nReturn the kth smallest array sum among all possible arrays.\n\n \nExample 1:\n\nInput: mat = [[1,3,11],[2,4,6]], k = 5\nOutput: 7\nExplanation: Choosing one element from each row, the first k smallest sum are:\n[1,2], [1,4], [3,2], [3,4], [1,6]. Where the 5th sum is 7.\n\n\nExample 2:\n\nInput: mat = [[1,3,11],[2,4,6]], k = 9\nOutput: 17\n\n\nExample 3:\n\nInput: mat = [[1,10,10],[1,4,5],[2,3,6]], k = 7\nOutput: 9\nExplanation: Choosing one element from each row, the first k smallest sum are:\n[1,1,2], [1,1,3], [1,4,2], [1,4,3], [1,1,6], [1,5,2], [1,5,3]. Where the 7th sum is 9.  \n\n\n \nConstraints:\n\n\n\tm == mat.length\n\tn == mat.length[i]\n\t1 <= m, n <= 40\n\t1 <= mat[i][j] <= 5000\n\t1 <= k <= min(200, nm)\n\tmat[i] is a non-decreasing array.\n\n"
}