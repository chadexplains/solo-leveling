{
  "id": "decoded-string-at-index",
  "name": "Decoded String at Index",
  "tags": [
    "String",
    "Stack"
  ],
  "description": "You are given an encoded string s. To decode the string to a tape, the encoded string is read one character at a time and the following steps are taken:\n\n\n\tIf the character read is a letter, that letter is written onto the tape.\n\tIf the character read is a digit d, the entire current tape is repeatedly written d - 1 more times in total.\n\n\nGiven an integer k, return the kth letter (1-indexed) in the decoded string.\n\n \nExample 1:\n\nInput: s = \"leet2code3\", k = 10\nOutput: \"o\"\nExplanation: The decoded string is \"leetleetcodeleetleetcodeleetleetcode\".\nThe 10th letter in the string is \"o\".\n\n\nExample 2:\n\nInput: s = \"ha22\", k = 5\nOutput: \"h\"\nExplanation: The decoded string is \"hahahaha\".\nThe 5th letter is \"h\".\n\n\nExample 3:\n\nInput: s = \"a2345678999999999999999\", k = 1\nOutput: \"a\"\nExplanation: The decoded string is \"a\" repeated 8301530446056247680 times.\nThe 1st letter is \"a\".\n\n\n \nConstraints:\n\n\n\t2 <= s.length <= 100\n\ts consists of lowercase English letters and digits 2 through 9.\n\ts starts with a letter.\n\t1 <= k <= 109\n\tIt is guaranteed that k is less than or equal to the length of the decoded string.\n\tThe decoded string is guaranteed to have less than 263 letters.\n\n"
}