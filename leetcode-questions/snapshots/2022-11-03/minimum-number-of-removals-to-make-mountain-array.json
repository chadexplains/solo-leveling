{
  "id": "minimum-number-of-removals-to-make-mountain-array",
  "name": "Minimum Number of Removals to Make Mountain Array",
  "tags": [
    "Array",
    "Binary Search",
    "Dynamic Programming",
    "Greedy"
  ],
  "description": "You may recall that an array arr is a mountain array if and only if:\n\n\n\tarr.length >= 3\n\tThere exists some index i (0-indexed) with 0 < i < arr.length - 1 such that:\n\t\n\t\tarr[0] < arr[1] < ... < arr[i - 1] < arr[i]\n\t\tarr[i] > arr[i + 1] > ... > arr[arr.length - 1]\n\t\n\t\n\n\nGiven an integer array nums​​​, return the minimum number of elements to remove to make nums​​​ a mountain array.\n\n \nExample 1:\n\nInput: nums = [1,3,1]\nOutput: 0\nExplanation: The array itself is a mountain array so we do not need to remove any elements.\n\n\nExample 2:\n\nInput: nums = [2,1,1,5,6,2,3,1]\nOutput: 3\nExplanation: One solution is to remove the elements at indices 0, 1, and 5, making the array nums = [1,5,6,3,1].\n\n\n \nConstraints:\n\n\n\t3 <= nums.length <= 1000\n\t1 <= nums[i] <= 109\n\tIt is guaranteed that you can make a mountain array out of nums.\n\n"
}