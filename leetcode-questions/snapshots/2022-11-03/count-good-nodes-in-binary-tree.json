{
  "id": "count-good-nodes-in-binary-tree",
  "name": "Count Good Nodes in Binary Tree",
  "tags": [
    "Tree",
    "Depth-First Search",
    "Breadth-First Search",
    "Binary Tree"
  ],
  "description": "Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.\n\nReturn the number of good nodes in the binary tree.\n\n \nExample 1:\n\n\n\nInput: root = [3,1,4,3,null,1,5]\nOutput: 4\nExplanation: Nodes in blue are good.\nRoot Node (3) is always a good node.\nNode 4 -> (3,4) is the maximum value in the path starting from the root.\nNode 5 -> (3,4,5) is the maximum value in the path\nNode 3 -> (3,1,3) is the maximum value in the path.\n\nExample 2:\n\n\n\nInput: root = [3,3,null,4,2]\nOutput: 3\nExplanation: Node 2 -> (3, 3, 2) is not good, because \"3\" is higher than it.\n\nExample 3:\n\nInput: root = [1]\nOutput: 1\nExplanation: Root is considered as good.\n\n \nConstraints:\n\n\n\tThe number of nodes in the binary tree is in the range [1, 10^5].\n\tEach node's value is between [-10^4, 10^4].\n"
}