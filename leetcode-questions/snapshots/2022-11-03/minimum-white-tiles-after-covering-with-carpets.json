{
  "id": "minimum-white-tiles-after-covering-with-carpets",
  "name": "Minimum White Tiles After Covering With Carpets",
  "tags": [
    "String",
    "Dynamic Programming",
    "Prefix Sum"
  ],
  "description": "You are given a 0-indexed binary string floor, which represents the colors of tiles on a floor:\n\n\n\tfloor[i] = '0' denotes that the ith tile of the floor is colored black.\n\tOn the other hand, floor[i] = '1' denotes that the ith tile of the floor is colored white.\n\n\nYou are also given numCarpets and carpetLen. You have numCarpets black carpets, each of length carpetLen tiles. Cover the tiles with the given carpets such that the number of white tiles still visible is minimum. Carpets may overlap one another.\n\nReturn the minimum number of white tiles still visible.\n\n \nExample 1:\n\nInput: floor = \"10110101\", numCarpets = 2, carpetLen = 2\nOutput: 2\nExplanation: \nThe figure above shows one way of covering the tiles with the carpets such that only 2 white tiles are visible.\nNo other way of covering the tiles with the carpets can leave less than 2 white tiles visible.\n\n\nExample 2:\n\nInput: floor = \"11111\", numCarpets = 2, carpetLen = 3\nOutput: 0\nExplanation: \nThe figure above shows one way of covering the tiles with the carpets such that no white tiles are visible.\nNote that the carpets are able to overlap one another.\n\n\n \nConstraints:\n\n\n\t1 <= carpetLen <= floor.length <= 1000\n\tfloor[i] is either '0' or '1'.\n\t1 <= numCarpets <= 1000\n\n"
}