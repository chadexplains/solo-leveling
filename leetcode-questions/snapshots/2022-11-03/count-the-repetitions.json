{
  "id": "count-the-repetitions",
  "name": "Count The Repetitions",
  "tags": [
    "String",
    "Dynamic Programming"
  ],
  "description": "We define str = [s, n] as the string str which consists of the string s concatenated n times.\n\n\n\tFor example, str == [\"abc\", 3] ==\"abcabcabc\".\n\n\nWe define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1.\n\n\n\tFor example, s1 = \"abc\" can be obtained from s2 = \"abdbec\" based on our definition by removing the bolded underlined characters.\n\n\nYou are given two strings s1 and s2 and two integers n1 and n2. You have the two strings str1 = [s1, n1] and str2 = [s2, n2].\n\nReturn the maximum integer m such that str = [str2, m] can be obtained from str1.\n\n \nExample 1:\nInput: s1 = \"acb\", n1 = 4, s2 = \"ab\", n2 = 2\nOutput: 2\nExample 2:\nInput: s1 = \"acb\", n1 = 1, s2 = \"acb\", n2 = 1\nOutput: 1\n\n \nConstraints:\n\n\n\t1 <= s1.length, s2.length <= 100\n\ts1 and s2 consist of lowercase English letters.\n\t1 <= n1, n2 <= 106\n\n"
}