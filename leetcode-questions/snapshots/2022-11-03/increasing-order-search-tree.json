{
  "id": "increasing-order-search-tree",
  "name": "Increasing Order Search Tree",
  "tags": [
    "Stack",
    "Tree",
    "Depth-First Search",
    "Binary Search Tree",
    "Binary Tree"
  ],
  "description": "Given the root of a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only one right child.\n\n \nExample 1:\n\nInput: root = [5,3,6,2,4,null,8,1,null,null,null,7,9]\nOutput: [1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\n\n\nExample 2:\n\nInput: root = [5,1,7]\nOutput: [1,null,5,null,7]\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the given tree will be in the range [1, 100].\n\t0 <= Node.val <= 1000\n\n"
}