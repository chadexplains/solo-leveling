{
  "id": "symmetric-tree",
  "name": "Symmetric Tree",
  "tags": [
    "Tree",
    "Depth-First Search",
    "Breadth-First Search",
    "Binary Tree"
  ],
  "description": "Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).\n\n \nExample 1:\n\nInput: root = [1,2,2,3,4,4,3]\nOutput: true\n\n\nExample 2:\n\nInput: root = [1,2,2,null,3,null,3]\nOutput: false\n\n\n \nConstraints:\n\n\n\tThe number of nodes in the tree is in the range [1, 1000].\n\t-100 <= Node.val <= 100\n\n\n \nFollow up: Could you solve it both recursively and iteratively?"
}