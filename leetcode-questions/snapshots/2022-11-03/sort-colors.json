{
  "id": "sort-colors",
  "name": "Sort Colors",
  "tags": [
    "Array",
    "Two Pointers",
    "Sorting"
  ],
  "description": "Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\n\nWe will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.\n\nYou must solve this problem without using the library's sort function.\n\n \nExample 1:\n\nInput: nums = [2,0,2,1,1,0]\nOutput: [0,0,1,1,2,2]\n\n\nExample 2:\n\nInput: nums = [2,0,1]\nOutput: [0,1,2]\n\n\n \nConstraints:\n\n\n\tn == nums.length\n\t1 <= n <= 300\n\tnums[i] is either 0, 1, or 2.\n\n\n \nFollow up: Could you come up with a one-pass algorithm using only constant extra space?\n"
}