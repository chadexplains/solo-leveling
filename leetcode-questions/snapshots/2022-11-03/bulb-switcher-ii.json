{
  "id": "bulb-switcher-ii",
  "name": "Bulb Switcher II",
  "tags": [
    "Math",
    "Bit Manipulation",
    "Depth-First Search",
    "Breadth-First Search"
  ],
  "description": "There is a room with n bulbs labeled from 1 to n that all are turned on initially, and four buttons on the wall. Each of the four buttons has a different functionality where:\n\n\n\tButton 1: Flips the status of all the bulbs.\n\tButton 2: Flips the status of all the bulbs with even labels (i.e., 2, 4, ...).\n\tButton 3: Flips the status of all the bulbs with odd labels (i.e., 1, 3, ...).\n\tButton 4: Flips the status of all the bulbs with a label j = 3k + 1 where k = 0, 1, 2, ... (i.e., 1, 4, 7, 10, ...).\n\n\nYou must make exactly presses button presses in total. For each press, you may pick any of the four buttons to press.\n\nGiven the two integers n and presses, return the number of different possible statuses after performing all presses button presses.\n\n \nExample 1:\n\nInput: n = 1, presses = 1\nOutput: 2\nExplanation: Status can be:\n- [off] by pressing button 1\n- [on] by pressing button 2\n\n\nExample 2:\n\nInput: n = 2, presses = 1\nOutput: 3\nExplanation: Status can be:\n- [off, off] by pressing button 1\n- [on, off] by pressing button 2\n- [off, on] by pressing button 3\n\n\nExample 3:\n\nInput: n = 3, presses = 1\nOutput: 4\nExplanation: Status can be:\n- [off, off, off] by pressing button 1\n- [off, on, off] by pressing button 2\n- [on, off, on] by pressing button 3\n- [off, on, on] by pressing button 4\n\n\n \nConstraints:\n\n\n\t1 <= n <= 1000\n\t0 <= presses <= 1000\n\n"
}